{"remainingRequest":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junxihe/Desktop/Gateway/vue-front-end/src/views/service/http.vue?vue&type=style&index=0&id=d188f088&scoped=true&lang=css&","dependencies":[{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/src/views/service/http.vue","mtime":1635382540547},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/css-loader/dist/cjs.js","mtime":1635056627671},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635056628071},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/postcss-loader/src/index.js","mtime":1635056627794},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/cache-loader/dist/cjs.js","mtime":1635056627451},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/vue-loader/lib/index.js","mtime":1635056627887}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5taXhpbi1jb21wb25lbnRzLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTsKICBwYWRkaW5nOiAzMHB4OwogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSA4NHB4KTsKfQouY29tcG9uZW50LWl0ZW17CiAgbWluLWhlaWdodDogMTAwcHg7Cn0K"},{"version":3,"sources":["http.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"http.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span v-if=\"isEdit===false\">创建HTTP服务</span>\n          <span v-if=\"isEdit===true\">修改HTTP服务</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item label=\"服务名称\" class=\"is-required\">\n              <el-input v-model=\"form.service_name\" placeholder=\"6-128位字母数字下划线\" :disabled=\"isEdit===true\" />\n            </el-form-item>\n            <el-form-item label=\"服务描述\" class=\"is-required\">\n              <el-input v-model=\"form.service_desc\" placeholder=\"最多255字符，必填\" />\n            </el-form-item>\n            <el-form-item label=\"接入类型\" class=\"is-required\">\n              <el-input v-model=\"form.rule\" :disabled=\"isEdit===true\" placeholder=\"路径格式：/user/,域名格式：www.test.com\" class=\"input-with-select\">\n                <el-select slot=\"prepend\" v-model=\"form.rule_type\" placeholder=\"请选择\" style=\"width:80px\" :disabled=\"isEdit===true\">\n                  <el-option label=\"路径\" :value=\"0\" />\n                  <el-option label=\"域名\" :value=\"1\" />\n                </el-select>\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"支持https\">\n              <el-switch\n                v-model=\"form.need_https\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n              <span style=\"color:#606266;font-weight: 700;\">&nbsp;&nbsp;&nbsp;支持strip_uri&nbsp;&nbsp;</span>\n              <el-switch\n                v-model=\"form.need_strip_uri\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n              <span style=\"color:#606266;font-weight: 700;\">&nbsp;&nbsp;&nbsp;支持websocket&nbsp;&nbsp;</span>\n              <el-switch\n                v-model=\"form.need_websocket\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n            </el-form-item>\n            <el-form-item label=\"URL重写\">\n              <el-input v-model=\"form.url_rewrite\" type=\"textarea\" autosize placeholder=\"格式：^/gateway/test_service(.*) $1 多条换行\" />\n            </el-form-item>\n            <el-form-item label=\"Header转换\">\n              <el-input v-model=\"form.header_transfor\" type=\"textarea\" autosize placeholder=\"header转换支持 add(增加)/del(删除)/edit(修改) 格式：add headerName headValue\" />\n            </el-form-item>\n            <el-form-item label=\"开启验证\">\n              <el-switch\n                v-model=\"form.open_auth\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n            </el-form-item>\n            <el-form-item label=\"IP白名单\">\n              <el-input v-model=\"form.white_list\" type=\"textarea\" autosize placeholder=\"格式：127.0.0.1 多条换行，白名单优先于黑名单\" />\n            </el-form-item>\n            <el-form-item label=\"IP黑名单\">\n              <el-input v-model=\"form.black_list\" type=\"textarea\" autosize placeholder=\"格式：127.0.0.1 多条换行，白名单优先于黑名单\" />\n            </el-form-item>\n\n            <el-form-item label=\"客户端限流\">\n              <el-input v-model=\"form.clientip_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"服务端限流\">\n              <el-input v-model=\"form.service_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"轮询方式\">\n              <el-radio-group v-model=\"form.round_type\">\n                <el-radio :label=\"0\">random</el-radio>\n                <el-radio :label=\"1\">round-robin</el-radio>\n                <el-radio :label=\"2\">weight_round-robin</el-radio>\n                <el-radio :label=\"3\">ip_hash</el-radio>\n              </el-radio-group>\n            </el-form-item>\n\n            <el-form-item label=\"IP列表\" class=\"is-required\">\n              <el-input v-model=\"form.ip_list\" type=\"textarea\" autosize placeholder=\"格式：127.0.0.1:80 多条换行\" />\n            </el-form-item>\n\n            <el-form-item label=\"权重列表\" class=\"is-required\">\n              <el-input v-model=\"form.weight_list\" type=\"textarea\" autosize placeholder=\"格式：50 多条换行\" />\n            </el-form-item>\n\n            <el-form-item label=\"建立连接超时\">\n              <el-input v-model=\"form.upstream_connect_timeout\" placeholder=\"单位s，0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"获取header超时\">\n              <el-input v-model=\"form.upstream_header_timeout\" placeholder=\"单位s，0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"链接最大空闲时间\">\n              <el-input v-model=\"form.upstream_idle_timeout\" placeholder=\"单位s，0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"最大空闲链接数\">\n              <el-input v-model=\"form.upstream_max_idle\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" :disabled=\"submitButDisabled\" @click=\"handleSubmit\">立即提交</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { serviceAddHttp, serviceDetail, serviceUpdateHttp } from '@/api/service'\nexport default {\n  name: 'ServiceCreateHttp',\n  data() {\n    return {\n      isEdit: false,\n      submitButDisabled: false,\n      form: {\n        service_name: '',\n        service_desc: '',\n        rule_type: 0,\n        rule: '',\n        need_https: 0,\n        need_websocket: 0,\n        need_strip_uri: 1,\n        url_rewrite: '',\n        header_transfor: '',\n        round_type: 2,\n        ip_list: '',\n        weight_list: '',\n        upstream_connect_timeout: '',\n        upstream_header_timeout: '',\n        upstream_idle_timeout: '',\n        upstream_max_idle: '',\n        open_auth: 0,\n        black_list: '',\n        white_list: '',\n        clientip_flow_limit: '',\n        service_flow_limit: ''\n      }\n    }\n  },\n  created() {\n    const id = this.$route.params && this.$route.params.id\n    if (id > 0) {\n      this.isEdit = true\n      this.fetchData(id)\n    }\n  },\n  methods: {\n    fetchData(id) {\n      const query = { 'id': id }\n      serviceDetail(query).then(response => {\n        this.form.id = response.data.info.id\n        this.form.load_type = response.data.info.load_type\n        this.form.service_name = response.data.info.service_name\n        this.form.service_desc = response.data.info.service_desc\n        this.form.rule_type = response.data.http_rule.rule_type\n        this.form.rule = response.data.http_rule.rule\n        this.form.need_https = response.data.http_rule.need_https\n        this.form.need_websocket = response.data.http_rule.need_websocket\n        this.form.need_strip_uri = response.data.http_rule.need_strip_uri\n        this.form.url_rewrite = response.data.http_rule.url_rewrite.replace(/,/g, '\\n')\n        this.form.header_transfor = response.data.http_rule.header_transfor.replace(/,/g, '\\n')\n        this.form.round_type = response.data.load_balance.round_type\n        this.form.round_type = response.data.load_balance.round_type\n        this.form.ip_list = response.data.load_balance.ip_list.replace(/,/g, '\\n')\n        this.form.weight_list = response.data.load_balance.weight_list.replace(/,/g, '\\n')\n        this.form.upstream_connect_timeout = response.data.load_balance.upstream_connect_timeout\n        this.form.upstream_header_timeout = response.data.load_balance.upstream_header_timeout\n        this.form.upstream_idle_timeout = response.data.load_balance.upstream_idle_timeout\n        this.form.upstream_max_idle = response.data.load_balance.upstream_max_idle\n        this.form.upstream_max_idle = response.data.load_balance.upstream_max_idle\n        this.form.open_auth = response.data.access_control.open_auth\n        this.form.black_list = response.data.access_control.black_list.replace(/,/g, '\\n')\n        this.form.white_list = response.data.access_control.white_list.replace(/,/g, '\\n')\n        this.form.clientip_flow_limit = response.data.access_control.clientip_flow_limit\n        this.form.service_flow_limit = response.data.access_control.service_flow_limit\n      }).catch(() => {\n      })\n    },\n    handleSubmit() {\n      this.submitButDisabled = true\n      const query = Object.assign({}, this.form)\n      console.log(query)\n      query.url_rewrite = query.url_rewrite.replace(/\\n/g, ',')\n      query.header_transfor = query.header_transfor.replace(/\\n/g, ',')\n      query.ip_list = query.ip_list.replace(/\\n/g, ',')\n      query.weight_list = query.weight_list.replace(/\\n/g, ',')\n      query.black_list = query.black_list.replace(/\\n/g, ',')\n      query.white_list = query.white_list.replace(/\\n/g, ',')\n      query.service_flow_limit = Number(query.service_flow_limit)\n      query.clientip_flow_limit = Number(query.clientip_flow_limit)\n      query.upstream_connect_timeout = Number(query.upstream_connect_timeout)\n      query.upstream_header_timeout = Number(query.upstream_header_timeout)\n      query.upstream_idle_timeout = Number(query.upstream_idle_timeout)\n      query.upstream_max_idle = Number(query.upstream_max_idle)\n      if (this.isEdit) {\n        serviceUpdateHttp(query).then(response => {\n          this.submitButDisabled = false\n          this.$notify({\n            title: 'Success',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          })\n        }).catch(() => {\n          this.submitButDisabled = false\n        })\n      } else {\n        serviceAddHttp(query).then(response => {\n          this.submitButDisabled = false\n          this.$notify({\n            title: 'Success',\n            message: '添加成功',\n            type: 'success',\n            duration: 2000\n          })\n        }).catch(() => {\n          this.submitButDisabled = false\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.component-item{\n  min-height: 100px;\n}\n</style>\n"]}]}