{"remainingRequest":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junxihe/Desktop/Gateway/vue-front-end/src/views/service/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/src/views/service/list.vue","mtime":1636592797795},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/cache-loader/dist/cjs.js","mtime":1635056627451},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/babel-loader/lib/index.js","mtime":1635056627945},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/cache-loader/dist/cjs.js","mtime":1635056627451},{"path":"/Users/junxihe/Desktop/Gateway/vue-front-end/node_modules/vue-loader/lib/index.js","mtime":1635056627887}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHNlcnZpY2VMaXN0LCBzZXJ2aWNlRGVsZXRlIH0gZnJvbSAnQC9hcGkvc2VydmljZScKaW1wb3J0IHdhdmVzIGZyb20gJ0AvZGlyZWN0aXZlL3dhdmVzJyAvLyB3YXZlcyBkaXJlY3RpdmUKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nIC8vIHNlY29uZGFyeSBwYWNrYWdlIGJhc2VkIG9uIGVsLXBhZ2luYXRpb24KCmNvbnN0IG51bWJlclRvdHlwZSA9IFsKICB7IGtleTogJzAnLCBkaXNwbGF5X25hbWU6ICdIVFRQJyB9LAogIHsga2V5OiAnMScsIGRpc3BsYXlfbmFtZTogJ1RDUCcgfSwKICB7IGtleTogJzInLCBkaXNwbGF5X25hbWU6ICdHUlBDJyB9Cl0KCmNvbnN0IHR5cGVhcnIgPSBudW1iZXJUb3R5cGUucmVkdWNlKChhY2MsIGN1cikgPT4gewogIGFjY1tjdXIua2V5XSA9IGN1ci5kaXNwbGF5X25hbWUKICByZXR1cm4gYWNjCn0sIHt9KQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZXJ2aWNlTGlzdCcsCiAgY29tcG9uZW50czogeyBQYWdpbmF0aW9uIH0sCiAgZGlyZWN0aXZlczogeyB3YXZlcyB9LAogIGZpbHRlcnM6IHsKICAgIGxvYWRUeXBlRmlsdGVyKHR5cGUpIHsKICAgICAgcmV0dXJuIHR5cGVhcnJbdHlwZV0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJsZUtleTogMCwKICAgICAgbGlzdDogbnVsbCwKICAgICAgdG90YWw6IDAsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBwYWdlX251bWJlcjogMSwKICAgICAgICBwYWdlX3NpemU6IDIwLAogICAgICAgIGluZm86ICcnCiAgICAgIH0sCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgc2VydmljZUxpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEuc2VydmljZV9saXN0CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWwKICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVGaWx0ZXIoKSB7CiAgICAgIHRoaXMubGlzdFF1ZXJ5LnBhZ2VfbnVtYmVyID0gMQogICAgICB0aGlzLmdldExpc3QoKQogICAgfSwKICAgIGhhbmRsZURlbGV0ZShyb3csIGluZGV4KSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ0RvIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIHNlcnZpY2U/JywgJ1dhcm5pbmcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdZZXMnLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdObycsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIGNvbnN0IGRlbGV0ZVF1ZXJ5ID0gewogICAgICAgICAgJ2lkJzogcm93LmlkCiAgICAgICAgfQogICAgICAgIHNlcnZpY2VEZWxldGUoZGVsZXRlUXVlcnkpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgbWVzc2FnZTogJ0RlbGV0ZWQgU3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgfSkKICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgfSkKICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgICAgbWVzc2FnZTogJ0RlbGV0ZSBDYW5jZWwnLAogICAgICAgICAgdHlwZTogJ2luZm8nLAogICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICB9KQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.info\"\n        placeholder=\"服务名称/服务描述\"\n        style=\"width: 200px;\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        Search\n      </el-button>\n      <router-link :to=\"'/service/create_http/'\">\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\">\n          Add new HTTP service\n        </el-button>\n      </router-link>\n      <router-link :to=\"'/service/create_tcp/'\">\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\">\n          Add new TCP service\n        </el-button>\n      </router-link>\n      <router-link :to=\"'/service/create_grpc/'\">\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\">\n          Add new GRPC service\n        </el-button>\n      </router-link>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"ID\" prop=\"id\" align=\"center\" width=\"50\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Service Name\" min-width=\"110px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.service_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Description\" min-width=\"120px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.service_desc }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Type\" min-width=\"60px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.load_type | loadTypeFilter }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"IP Address\" min-width=\"165px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.service_address }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"QPS\" min-width=\"50px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.qps }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Daily Requests\" min-width=\"70px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.qpd }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Nodes\" min-width=\"60px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.total_node }}</span>\n        </template>\n      </el-table-column>\n\n<!--      <el-button type=\"danger\" icon=\"el-icon-delete\" circle />-->\n      <el-table-column label=\"Operations\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <router-link :to=\"'/service/service_stats/'+row.id\">\n            <el-button class=\"bt\" type=\"warning\" icon=\"el-icon-star-off\" circle />\n          </router-link>\n          <router-link v-if=\"row.load_type===0\" :to=\"'/service/update_http/'+row.id\">\n            <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\" circle />\n          </router-link>\n          <router-link v-if=\"row.load_type===1\" :to=\"'/service/update_tcp/'+row.id\">\n            <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\" circle />\n          </router-link>\n          <router-link v-if=\"row.load_type===2\" :to=\"'/service/update_grpc/'+row.id\">\n            <el-button class=\"bt\" type=\"primary\" icon=\"el-icon-edit\" circle />\n          </router-link>\n          <el-button\n            class=\"bt\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            circle\n            @click=\"handleDelete(row,$index)\"\n          />\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.limit\"\n      @pagination=\"getList\"\n    />\n  </div>\n</template>\n\n<script>\nimport { serviceList, serviceDelete } from '@/api/service'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nconst numberTotype = [\n  { key: '0', display_name: 'HTTP' },\n  { key: '1', display_name: 'TCP' },\n  { key: '2', display_name: 'GRPC' }\n]\n\nconst typearr = numberTotype.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ServiceList',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    loadTypeFilter(type) {\n      return typearr[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page_number: 1,\n        page_size: 20,\n        info: ''\n      },\n      temp: {\n        id: undefined\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      serviceList(this.listQuery).then(response => {\n        this.list = response.data.service_list\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page_number = 1\n      this.getList()\n    },\n    handleDelete(row, index) {\n      this.$confirm('Do you want to delete this service?', 'Warning', {\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        type: 'warning'\n      }).then(() => {\n        const deleteQuery = {\n          'id': row.id\n        }\n        serviceDelete(deleteQuery).then(response => {\n          this.$notify({\n            title: 'Success',\n            message: 'Deleted Successfully',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        })\n      }).catch(() => {\n        this.$notify({\n          title: 'Success',\n          message: 'Delete Cancel',\n          type: 'info',\n          duration: 2000\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .bt {\n    margin-right: 10px;\n  }\n</style>\n"]}]}